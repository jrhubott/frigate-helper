name: Build and Push Docker Image to GHCR

# Controls when the workflow will run
on:
  # Trigger on creation of tags
  push:
    tags:
      - 'v*'
    branches:
      - main

# Setup jobs
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Extract the version tag if it's a tag push
      - name: Extract version tag
        id: extract_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Set default image tag to 'latest' for main branch pushes
      - name: Set default version tag to latest
        if: github.ref == 'refs/heads/main'
        run: echo "VERSION_TAG=latest" >> $GITHUB_ENV

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Build the Docker image with the appropriate tag (version or latest)
      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ env.VERSION_TAG }}
          docker build -t $IMAGE_NAME .

      # Push the Docker image to GitHub Container Registry with the appropriate tag
      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ env.VERSION_TAG }}
          docker push $IMAGE_NAME

      # Optionally, also tag the image as 'latest' if it's a version tag
      - name: Tag and push the latest version (optional)
        if: startsWith(env.VERSION_TAG, 'v')
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ env.VERSION_TAG }}
          LATEST_IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
          docker tag $IMAGE_NAME $LATEST_IMAGE
          docker push $LATEST_IMAGE

      # Log out from GitHub Container Registry for cleanup
      - name: Log out from GitHub Container Registry
        run: docker logout ghcr.io
        
permissions:
  contents: read          # Read access to the repository content
  packages: write         # Write access to GitHub Container Registry